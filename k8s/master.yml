---
- hosts: all
  become: true
  tasks:
  - name: Install packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - snapd
      - python-pip

  - name: Add apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for Ubuntu 16/04 (xenial) stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependencies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker
  
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
  
  - name: Add apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add apt repository for Kubernetes Ubuntu 16.04 (xenial)
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes packages
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Create /etc/default/kubelet file
    become: true
    file: 
      path: /etc/default/kubelet
      state: touch

  - name: Configure node ip
    lineinfile:
     path: /etc/default/kubelet
     line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize Kubernetes cluster
    command: kubeadm init --apiserver-advertise-address="{{node_ip}}" --apiserver-cert-extra-sans="{{node_ip}}"  --node-name {{ansible_hostname}} --pod-network-cidr={{pod_network_cidr}}

  - name: Create Kubernetes config directory
    become: yes
    file:
      path: /home/vagrant/.kube
      state: directory
      mode: 0755

  - name: Copy admin.conf to Home/.kube directory
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      mode: 0755
      remote_src: true

  - name: PIP Install helm pre-requisites
    become: true
    pip:
      name:
        - pyhelm
        - grpcio
      state: present
    
  - name: Install helm
    snap:
      name: helm
      classic: yes

  - name: Install calico pod network
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/v3.7/manifests/calico.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command from master to host system. Provide user id of the host system
    become_user: "{{ host_user_id }}"
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  
  handlers:
    - name: docker status
      service: name=docker state=started